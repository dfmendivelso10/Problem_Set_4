install.packages("lwgeom")
library(lwgeom)
library(lwgeom)
library(lwgeom)
p_load(tidyverse,rio,viridis,sf, leaflet, tmaptools)
install.packages("sf")
install.packages("lwgeom")
library(lwgeom)
## Guardamos un amenity con el Poligono que en este caso es bogota con las estaciones de Policia
osm_p = opq(bbox = getbb("BogotÃ¡ Colombia")) %>%
add_osm_feature(key="amenity" , value="police")
## Fijamos un objeto
osm_sfp = osm_p %>% osmdata_sf()
osm_sfp
police_bog = osm_sfp$osm_points %>% select(osm_id)
police_bog
### Si queremos visualizarlo
leaflet() %>% addTiles() %>% addCircleMarkers(data=police_bog, col="red")
library(sf)
install.packages("sf")
install.packages("sf", configure.args = "--with-proj-lib=/usr/local/lib/")
install.packages("rgdal")
install.packages("sf", configure.args = "--with-proj-lib=/usr/local/lib/")
install.packages("tidyverse")
library(httr2)
library(osmdata)
library(pacman)
require(pacman)
p_load(here,knitr,tidyverse,ggthemes,fontawesome,kableExtra)
p_load(tidyverse,rio,viridis,sf, leaflet, tmaptools)
test <- readRDS("~/Documents/GitHub/Problem-set-3/stores/dataPS3/test.Rds")
#1. total=cubierta
#2. Texto
### patterns
x1 <- "[:space:]+[:digit:]+[:space:]+"
x2 <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+"
train2$new_surface <- train2$surface_total
1. total=cubierta
x1 <- "[:space:]+[:digit:]+[:space:]+"
x2 <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+"
test$new_surface <- test$surface_total
for (i in c("m2","mt2","mts2","M2","Mts2","cuadrad","mtro","mtr2","metros","METROS","Metros", "MTS","Mts","mts","MT","MT2","Mt2")){
test <- train2 %>%
mutate(new_surface = ifelse(is.na(train2$surface_total)==T,str_extract(string=description , pattern=paste0(x1,i)),new_surface),
new_surface = ifelse(is.na(train2$surface_total)==T,str_extract(string=description , pattern=paste0(x2,i)),new_surface))
}
1 <- "[:space:]+[:digit:]+[:space:]+"
x1 <- "[:space:]+[:digit:]+[:space:]+"
x2 <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+"
test$new_surface <- test$surface_total
for (i in c("m2","mt2","mts2","M2","Mts2","cuadrad","mtro","mtr2","metros","METROS","Metros", "MTS","Mts","mts","MT","MT2","Mt2")){
for (i in c("m2","mt2","mts2","M2","Mts2","cuadrad","mtro","mtr2","metros","METROS","Metros", "MTS","Mts","mts","MT","MT2","Mt2")){
test <- test %>%
mutate(new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x1,i)),new_surface),
new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x2,i)),new_surface))
}
for (i in c("metros","METROS","Metros", "MTS", "Mts", "mts", "MT", "MT2", "Mt2","m2","mt2","mts2","M2","Mts2","cuadrad","mtro","mtr2"," ","\n\n", "metros","METROS","Metros", "MTS", "Mts", "mts", "MT", "MT2", "Mt2",
)){
test$new_surface <- gsub(i,"",test$new_surface)
}
test$new_surface <- gsub(",",".",test$new_surface)
test$new_surface <- as.numeric(test$new_surface)
str_locate_all(string = test$description , pattern = x) ## detect pattern
str_extract(string = test$description , pattern= x) ## extrac pattern
test <- test %>%
mutate(new_surface = str_extract(string=description , pattern= x))
table(test$new_surface) %>% sort() %>% head()
sum(is.na(test$new_surface))
test$new_surface<-as.numeric(test$new_surface)
test$new_surface<-(ifelse(test$new_surface >30.15,test$new_surface,NA))
test$new_surface<-(ifelse((is.na(test$surface_total)),test$new_surface,test$surface_total))
sum(is.na(test$surface_total))#39044
sum(is.na(test$new_surface))#37060
test$new_surface<-(ifelse((is.na(test$new_surface)),test$surface_covered,test$new_surface))
sum(is.na(test$new_surface))#32704
test$city<-as.factor(test$city)
test$property_type<-as.factor(test$property_type)
test$operation_type<-as.factor(test$operation_type)
class(test)
test2<-as.data.frame(test)
test2<- test2 %>% select(city, surface_total,surface_covered,new_surface,rooms, bedrooms,bathrooms, property_type)
imp <- missForest(test2, verbose=TRUE, variablewise= TRUE)
imp$OOBerror #error que tiene
#        PFC          MSE          MSE          MSE          MSE
#0.000000e+00 9.174375e+05 2.115713e+04 7.770841e+06 3.045758e-02
#MSE          MSE          PFC
noNA<-as.data.frame(imp$ximp)
sum(is.na(noNA$new_surface))#0
test<-cbind(test,noNA$new_surface)
names(test)
'surface_final'->names(test)[names(test)=='noNA.new_surface']
View(test)
View(test)
View(test)
View(test)
View(test)
View(test)
View(test)
View(test)
View(test)
View(test)
View(test)
View(test)
View(test)
View(test)
View(test)
View(test)
View(test)
View(test)
View(test)
View(test)
View(test)
rm(test)
drop(test)
ls(test)
ls(test)
rm(test)
rm(test)
rm(test)
rm(test)
rm(test)
test <- read.table("~/Documents/GitHub/Problem-set-3/stores/dataPS3/test.Rds", header=TRUE, quote="\"")
test <- read.table("~/Documents/GitHub/Problem-set-3/stores/dataPS3/test.Rds", header=TRUE, quote="\"")
train  <- read.csv("/Users/df.mendivelso10/Documents/GitHub/Problem-set-3/stores/dataPS3/test.Rds", header=TRUE)
View(train)
test <- read.csv("/Users/df.mendivelso10/Documents/GitHub/Problem-set-3/stores/dataPS3/test.Rds", header=TRUE)
rm(train)
x1 <- "[:space:]+[:digit:]+[:space:]+"
x2 <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+"
test$new_surface <- test$surface_total
## replace values
for (i in c("m2","mt2","mts2","M2","Mts2","cuadrad","mtro","mtr2","metros","METROS","Metros", "MTS","Mts","mts","MT","MT2","Mt2")){
test <- train2 %>%
mutate(new_surface = ifelse(is.na(train2$surface_total)==T,str_extract(string=description , pattern=paste0(x1,i)),new_surface),
new_surface = ifelse(is.na(train2$surface_total)==T,str_extract(string=description , pattern=paste0(x2,i)),new_surface))
}
library(httr2)
library(osmdata)
library(pacman)
require(pacman)
p_load(here,knitr,tidyverse,ggthemes,fontawesome,kableExtra)
p_load(tidyverse,rio,viridis,sf, leaflet, tmaptools)
x1 <- "[:space:]+[:digit:]+[:space:]+"
x2 <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+"
test$new_surface <- test$surface_total
## replace values
for (i in c("m2","mt2","mts2","M2","Mts2","cuadrad","mtro","mtr2","metros","METROS","Metros", "MTS","Mts","mts","MT","MT2","Mt2")){
test <- train2 %>%
mutate(new_surface = ifelse(is.na(train2$surface_total)==T,str_extract(string=description , pattern=paste0(x1,i)),new_surface),
new_surface = ifelse(is.na(train2$surface_total)==T,str_extract(string=description , pattern=paste0(x2,i)),new_surface))
}
## patterns
x1 <- "[:space:]+[:digit:]+[:space:]+"
x2 <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+"
test$new_surface <- test$surface_total
## replace values
for (i in c("m2","mt2","mts2","M2","Mts2","cuadrad","mtro","mtr2","metros","METROS","Metros", "MTS","Mts","mts","MT","MT2","Mt2")){
test <- test %>%
mutate(new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x1,i)),new_surface),
new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x2,i)),new_surface))
}
### patterns
x1 <- "[:space:]+[:digit:]+[:space:]+"
x2 <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+"
test$new_surface <- test$surface_total
## replace values
for (i in c("m2","mt2","mts2","M2","Mts2","cuadrad","mtro","mtr2","metros","METROS","Metros", "MTS","Mts","mts","MT","MT2","Mt2")){
test <- test %>%
mutate(new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x1,i)),new_surface),
new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x2,i)),new_surface))
}
for (i in c("m2","mt2","mts2","M2","Mts2","cuadrad","mtro","mtr2","metros","METROS","Metros", "MTS","Mts","mts","MT","MT2","Mt2")){
test <- test %>%
mutate(new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x1,i)),new_surface),
new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x2,i)),new_surface))
}
for (i in c("m2","mt2","mts2","M2","Mts2","cuadrad","mtro","mtr2","metros","METROS","Metros", "MTS","Mts","mts","MT","MT2","Mt2")){
test <- test %>%
mutate(new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x1,i)),new_surface),
new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x2,i)),new_surface))
}
rm(i)
rm(xi)
rm(x1)
rm(x2)
x1 <- "[:space:]+[:digit:]+[:space:]+"
x2 <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+"
test$new_surface <- test$surface_total
## replace values
for (i in c("m2","mt2","mts2","M2","Mts2","cuadrad","mtro","mtr2","metros","METROS","Metros", "MTS","Mts","mts","MT","MT2","Mt2")){
test <- test %>%
mutate(new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x1,i)),new_surface),
new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x2,i)),new_surface))
}
rlang::last_error()
rlang::last_trace()
## replace values
for (i in c("m2","mt2","mts2","M2","Mts2","cuadrad","mtro","mtr2","metros","METROS","Metros", "MTS","Mts","mts","MT","MT2","Mt2")){
test <- test %>%
mutate(new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x1,i)),new_surface),
new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x2,i)),new_surface)))
or (i in c("m2","mt2","mts2","M2","Mts2","cuadrad","mtro","mtr2","metros","METROS","Metros", "MTS","Mts","mts","MT","MT2","Mt2")){
x1 <- "[:space:]+[:digit:]+[:space:]+"
x2 <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+"
test2$new_surface <- test2$surface_total
x1 <- "[:space:]+[:digit:]+[:space:]+"
x2 <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+"
test$new_surface <- test$surface_total
for (i in c("m2","mt2","mts2","M2","Mts2","cuadrad","mtro","mtr2","metros","METROS","Metros", "MTS","Mts","mts","MT","MT2","Mt2")){
test <- test %>%
mutate(new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x1,i)),new_surface),
new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x2,i)),new_surface))
}
x1 <- "[:space:]+[:digit:]+[:space:]+"
x2 <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+"
test$new_surface <- test$surface_total
for (i in c("m2","mt2","mts2","M2","Mts2","cuadrad","mtro","mtr2","metros","METROS","Metros", "MTS","Mts","mts","MT","MT2","Mt2")){
test <- test %>%
mutate(new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x1,i)),new_surface),
new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x2,i)),new_surface))
}
for (i in c("m2","mt2","mts2","M2","Mts2","cuadrad","mtro","mtr2","metros","METROS","Metros", "MTS","Mts","mts","MT","MT2","Mt2")){
test <- test %>%
mutate(new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x1,i)),new_surface),
new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x2,i)),new_surface))}
for (i in c("m2","mt2","mts2","M2","Mts2","cuadrad","mtro","mtr2","metros","METROS","Metros", "MTS","Mts","mts","MT","MT2","Mt2")){
test <- test %>%
mutate(new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x1,i)),new_surface),
new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x2,i)),new_surface))
}
View(test)
rm(test)
test <- read.table("~/Documents/GitHub/Problem-set-3/stores/dataPS3/test.Rds", header=TRUE, row.names=1, quote="\"")
test <- read.table("~/Documents/GitHub/Problem-set-3/stores/dataPS3/test.Rds", header=TRUE, quote="\"", stringsAsFactors=TRUE)
test <- readRDS("/Users/df.mendivelso10/Documents/GitHub/Problem-set-3/stores/dataPS3/test.rds")
View(test)
### patterns
x1 <- "[:space:]+[:digit:]+[:space:]+"
x2 <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+"
test$new_surface <- test$surface_total
for (i in c("m2","mt2","mts2","M2","Mts2","cuadrad","mtro","mtr2","metros","METROS","Metros", "MTS","Mts","mts","MT","MT2","Mt2")){
test <- train2 %>%
mutate(new_surface = ifelse(is.na(train2$surface_total)==T,str_extract(string=description , pattern=paste0(x1,i)),new_surface),
new_surface = ifelse(is.na(train2$surface_total)==T,str_extract(string=description , pattern=paste0(x2,i)),new_surface))
}
# replace values
for (i in c("m2","mt2","mts2","M2","Mts2","cuadrad","mtro","mtr2","metros","METROS","Metros", "MTS","Mts","mts","MT","MT2","Mt2")){
test <- test %>%
mutate(new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x1,i)),new_surface),
new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x2,i)),new_surface))
}
library(httr2)
library(osmdata)
library(pacman)
require(pacman)
p_load(here,knitr,tidyverse,ggthemes,fontawesome,kableExtra)
p_load(tidyverse,rio,viridis,sf, leaflet, tmaptools)
# replace values
for (i in c("m2","mt2","mts2","M2","Mts2","cuadrad","mtro","mtr2","metros","METROS","Metros", "MTS","Mts","mts","MT","MT2","Mt2")){
test <- test %>%
mutate(new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x1,i)),new_surface),
new_surface = ifelse(is.na(test$surface_total)==T,str_extract(string=description , pattern=paste0(x2,i)),new_surface))
}
## clean var
for (i in c("metros","METROS","Metros", "MTS", "Mts", "mts", "MT", "MT2", "Mt2","m2","mt2","mts2","M2","Mts2","cuadrad","mtro","mtr2"," ","\n\n", "metros","METROS","Metros", "MTS", "Mts", "mts", "MT", "MT2", "Mt2",
)){
test$new_surface <- gsub(i,"",test$new_surface)
}
x <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+"
str_locate_all(string = test$description , pattern = x) ## detect pattern
str_extract(string = test$description , pattern= x) ## extrac pattern
test <- test %>%
mutate(new_surface = str_extract(string=description , pattern= x))
table(test$new_surface) %>% sort() %>% head()
sum(is.na(test$new_surface))
test$new_surface<-as.numeric(test$new_surface)
test$new_surface<-(ifelse(test$new_surface >30.15,test$new_surface,NA))
test$new_surface<-(ifelse((is.na(test$surface_total)),test$new_surface,test$surface_total))
sum(is.na(test$surface_total))#39044
sum(is.na(test$new_surface))#37060
test$new_surface<-(ifelse((is.na(test$new_surface)),test$surface_covered,test$new_surface))
sum(is.na(test$new_surface))#32704
test$city<-as.factor(test$city)
test$property_type<-as.factor(test$property_type)
test$operation_type<-as.factor(test$operation_type)
#imputacion missings con arboles
test$city<-as.factor(test$city)
test$property_type<-as.factor(test$property_type)
test$operation_type<-as.factor(test$operation_type)
class(test)
nuevo_test<-as.data.frame(test)
nuevo_test<- nuevo_test %>% select(city, surface_total,surface_covered,new_surface,rooms, bedrooms,bathrooms, property_type)
imp <- missForest(nuevo_test verbose=TRUE, variablewise= TRUE)
#imputacion missings con arboles
test$city<-as.factor(test$city)
test$property_type<-as.factor(test$property_type)
test$operation_type<-as.factor(test$operation_type)
class(test)
nuevo_test<-as.data.frame(test)
nuevo_test<- nuevo_test %>% select(city, surface_total,surface_covered,new_surface,rooms, bedrooms,bathrooms, property_type)
install.packages(missForest, dependencies = TRUE)
install.packages("missForest", dependencies = TRUE)
library(missForest)
imp <- missForest(nuevo_test verbose=TRUE, variablewise= TRUE)
imp <- missForest(nuevo_test, verbose=TRUE, variablewise= TRUE)
imp$OOBerror #error que tiene
noNA<-as.data.frame(imp$ximp)
sum(is.na(noNA$new_surface))#0
test<-cbind(test,noNA$new_surface)
names(test)
'surface_final'->names(test)[names(test)=='noNA.new_surface']
View(test)
library(missForest)
library(spdep)
install.packages("spdep")
library(osmdata)
####################### Bus station BgtÃ¡
## Guardamos un amenity con el Poligono que en este caso es bogota con las estaciones de bus
osm20 = opq(bbox = getbb("BogotÃ¡ Colombia")) %>%
add_osm_feature(key="amenity" , value="bus_station")
## Fijamos un objeto
osm_sf20 = osm20 %>% osmdata_sf()
osm_sf20
bus_bog = osm_sf20$osm_points %>% select(osm_id)
library(tidyverse)
## Guardamos un amenity con el Poligono que en este caso es bogota con las estaciones de bus
osm20 = opq(bbox = getbb("BogotÃ¡ Colombia")) %>%
add_osm_feature(key="amenity" , value="bus_station")
## Fijamos un objeto
osm_sf20 = osm20 %>% osmdata_sf()
osm_sf20
bus_bog = osm_sf20$osm_points %>% select(osm_id)
bus_bog
### Si queremos visualizarlo
leaflet() %>% addTiles() %>% addCircleMarkers(data=bus_bog, col="red")
library(osmdata)
## Guardamos un amenity con el Poligono que en este caso es bogota con las estaciones de bus
osm20 = opq(bbox = getbb("BogotÃ¡ Colombia")) %>%
add_osm_feature(key="amenity" , value="bus_station")
## Fijamos un objeto
osm_sf20 = osm20 %>% osmdata_sf()
osm_sf20
bus_bog = osm_sf20$osm_points %>% select(osm_id)
bus_bog
### Si queremos visualizarlo
leaflet() %>% addTiles() %>% addCircleMarkers(data=bus_bog, col="red")
installl.packages("leafletâ")
install.packages("leafletâ")
library(leaflet)
## Guardamos un amenity con el Poligono que en este caso es bogota con las estaciones de bus
osm20 = opq(bbox = getbb("BogotÃ¡ Colombia")) %>%
add_osm_feature(key="amenity" , value="bus_station")
## Fijamos un objeto
osm_sf20 = osm20 %>% osmdata_sf()
osm_sf20
bus_bog = osm_sf20$osm_points %>% select(osm_id)
bus_bog
### Si queremos visualizarlo
leaflet() %>% addTiles() %>% addCircleMarkers(data=bus_bog, col="red")
library(sf)
install.packages("sf")
library(sf)
install.packages("tidyverse")
install.packages("sf")
library(sf)
install.packages("osmdata")
library(osmdata)
####################### Bus station BgtÃ¡
## Guardamos un amenity con el Poligono que en este caso es bogota con las estaciones de bus
osm20 = opq(bbox = getbb("BogotÃ¡ Colombia")) %>%
add_osm_feature(key="amenity" , value="bus_station")
## Fijamos un objeto
osm_sf20 = osm20 %>% osmdata_sf()
osm_sf20
bus_bog = osm_sf20$osm_points %>% select(osm_id)
install.packages("pacman")
install.packages("httr2")
install.packages("httr2")
install.packages("nngeo")
install.packages("spdep")
install.packages("missForest")
library(missForest)
library(spdep)
library(nngeo)
library(osmdata)
library(pacman)
require(pacman)
p_load(here,knitr,tidyverse,ggthemes,fontawesome,kableExtra)
p_load(tidyverse,rio,viridis,sf, leaflet, tmaptools)
####################### Bus station BgtÃ¡
## Guardamos un amenity con el Poligono que en este caso es bogota con las estaciones de bus
osm20 = opq(bbox = getbb("BogotÃ¡ Colombia")) %>%
add_osm_feature(key="amenity" , value="bus_station")
## Fijamos un objeto
osm_sf20 = osm20 %>% osmdata_sf()
osm_sf20
bus_bog = osm_sf20$osm_points %>% select(osm_id)
bus_bog
### Si queremos visualizarlo
leaflet() %>% addTiles() %>% addCircleMarkers(data=bus_bog, col="red")
## Interceptando estaciones de bus con BogotÃ¡
bus_bog$intercep <- st_intersects(bus_bog, Bogota,sparse=FALSE)[,1]
osm_sf20
IPM<- st_read(
"C:/Users/HP/Downloads/OSM/VULNRB_IPMxMZ.shp")
IPM<- st_read(
"/Users/df.mendivelso10/Downloads/VULNRB_IPMxMZ")
DATAIPM <- as.data.frame("IPMcali")
muestra2 <- st_as_sf(x = muestra2, ## datos
coords=c("lon","lat"), ## coordenadas
crs=4326) ## CRS
View(IPM)
save.image("~/Documents/GitHub/Problem-set-3/document/IPM.RData")
library(missForest)
library(spdep)
library(nngeo)
library(sf)
library(httr2)
library(osmdata)
library(pacman)
require(pacman)
p_load(here,knitr,tidyverse,ggthemes,fontawesome,kableExtra)
p_load(tidyverse,rio,viridis,sf, leaflet, tmaptools)
# option html
#------------------------------------------------------  IPM ----------------------------------------------------------------------------------------------------------------------
IPM<- st_read("/Users/df.mendivelso10/Downloads/VULNRB_IPMxMZ")
DATAIPM <- as.data.frame("IPMcali")
muestra2 <- subset(IPM, (IPM$COD_MPIO=="05001" | IPM$COD_MPIO=="11001" | IPM$COD_MPIO=="76001"))
dir <- system.file("shape", package="sf")
list.files(dir, pattern="^[nc]")
## Cambiamos el Sistema de Coordenadas de IPM2
muestra2 = st_transform(muestra2, "EPSG:4326" )  ### Version Correcta
st_crs(muestra2) == st_crs(train2)
####
table(muestra2$COD_MPIO)
load("~/Documents/GitHub/Problem-set-3/document/IPM.RData")
load("~/Documents/GitHub/Problem-set-3/document/enviroment.RData")
#------------------------------------------------------  IPM ----------------------------------------------------------------------------------------------------------------------
IPM<- st_read("/Users/df.mendivelso10/Downloads/VULNRB_IPMxMZ")
DATAIPM <- as.data.frame("IPMcali")
muestra2 <- subset(IPM, (IPM$COD_MPIO=="05001" | IPM$COD_MPIO=="11001" | IPM$COD_MPIO=="76001"))
muestra2 <- st_as_sf(x = muestra2, ## datos
coords=c("lon","lat"), ## coordenadas
crs=4326) ## CRS
####
class(muestra2)
dir <- system.file("shape", package="sf")
list.files(dir, pattern="^[nc]")
## Cambiamos el Sistema de Coordenadas de IPM2
muestra2 = st_transform(muestra2, "EPSG:4326" )  ### Version Correcta
st_crs(muestra2) == st_crs(train2)
####
table(muestra2$COD_MPIO)
base_final <- st_join(train2,muestra2)
sum (is.na(base_final$ipm))
na_houses<-subset(base_final, is.na(base_final$ipm==T))
na_houses_bog <- subset(na_houses$city=="BogotÃ¡ D.C")
na_houses_bog <- subset(na_houses, na_houses$city=="BogotÃ¡ D.C")
na_houses_med <- subset(na_houses, na_houses$city=="MedellÃ­n")
View(muestra2)
################ Vamos a Dividir Muestra 2
muestra2_bog <- subset(muestra2, muestra2$COD_MPIO=="11001")
muestra2_med <- subset(muestra2, muestra2$COD_MPIO=="05001")
matrix_dist_bog<- st_nearest_points(x=na_houses_bog , y=muestra2_bog, progress =T)
library(missForest)
library(spdep)
library(nngeo)
library(sf)
library(httr2)
library(osmdata)
library(pacman)
require(pacman)
p_load(here,knitr,tidyverse,ggthemes,fontawesome,kableExtra)
p_load(tidyverse,rio,viridis,sf, leaflet, tmaptools)
library(sf)
library(sp)
library(rgdal)
library(terra)
library(leaflet)
require(rgdal)
require(sf)
##-------------------------
setwd("/Users/df.mendivelso10/Desktop/Bases_Final_Coca/Base_2020")
list.files("/Users/df.mendivelso10/Downloads/Base_2020")
shape_2020 <- read_sf(dsn = ".", layer="geo_export_790bc368-34f8-4472-86cd-1e7fd5791105")
leaflet() %>% addTiles() %>% addPolygons(data=shape$geometry)
rm(shape_2020)
rm(ipm)
rm(ipm)
rm(imp)
rm(noNA)
rm(nuevo_test)
##-------------------------
setwd("/Users/df.mendivelso10/Desktop/Bases_Final_Coca/Base_2020")
list.files("/Users/df.mendivelso10/Downloads/Base_2020")
shape_2020 <- read_sf(dsn = ".", layer="geo_export_790bc368-34f8-4472-86cd-1e7fd5791105")
leaflet() %>% addTiles() %>% addPolygons(data=shape$geometry)
leaflet() %>% addTiles() %>% addPolygons(data=shape$geometry)
leaflet() %>% addTiles() %>% addPolygons(data=shape_2020$geometry)
leaflet() %>% addTiles() %>% addPolygons(data=shape_2020$geometry)
leaflet() %>% addTiles() %>% addPolygons(data=shape_2020$geometry, color = "red")
setwd("/Users/df.mendivelso10/Desktop/Bases_Final_Coca/Base_2014")
list.files("/Users/df.mendivelso10/Desktop/Bases_Final_Coca/Base_2014")
shape_2014 <- read_sf(dsn = ".", layer="geo_export_6b789664-800f-4a06-be2f-b8a36f1a8297")
leaflet() %>% addTiles() %>% addPolygons(data=shape_2014$geometry, color = "blue")
setwd("/Users/df.mendivelso10/Desktop/Bases_Final_Coca/Base_2013")
list.files("/Users/df.mendivelso10/Desktop/Bases_Final_Coca/Base_2013")
shape_2013 <- read_sf(dsn = ".", layer="geo_export_f2b10651-56a4-4d7d-91fa-58e5b3833581")
leaflet() %>% addTiles() %>% addPolygons(data=shape_2013$geometry, color = "green")
leaflet() %>% addTiles() %>% addPolygons(data=shape_2013$geometry, color = "white")
leaflet() %>% addTiles() %>% addPolygons(data=shape_2013$geometry, color = "yellow")
save.image("~/Documents/GitHub/Proyecto_Final_BigData/Untitled.RData")
